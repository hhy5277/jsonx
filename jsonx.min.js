window.jsonx=function(t){var e={};function n(r){if(e[r])return e[r].exports;var u=e[r]={i:r,l:!1,exports:{}};return t[r].call(u.exports,u,u.exports,n),u.l=!0,u.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var u in t)n.d(r,u,function(e){return t[e]}.bind(null,u));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e){const n={'"':"quote","'":"quote",",":"comma",":":"colon","{":"nest","[":"nest","(":"nest"},r={"{":"}","[":"]","(":")"},u=t=>t in n?n[t]:"plain",o=(t,e)=>{let n=t.substr(0,e+1).split("\n");return[n.length,n.pop().length]},s=(t,e,n,r={})=>{let o=u(t[e]),s=t.substr(e,n);switch(o){case"quote":s=s.substr(1,s.length-2);break;case"plain":s=(t=>t.replace(/^\s+|\s+$/g,""))(s)}return{status:o,text:s,...r}},l=t=>{switch(t.status){case"plain":return JSON.parse(t.text);case"nest":return t.left in a?a[t.left](t):t.text;default:return t.text}},i={quote:(t,e,n)=>{let r,u=e,l=t.length,i=t[u++];for(;u<l;u++)if("\\"===(r=t[u]))u+=1;else if(r===i)return n.push(s(t,e,u-e+1,{quote:i})),u;let[a,f]=o(t,e);throw`Quote is not closed. [${i}] at Ln ${a} Col ${f}`},nest:(t,e,n)=>{let l,a,f=e,c=t[f++],p=r[c],b=f,h=[];for(;f<t.length;f++)if(l=t[f],(a=u(l))in i)f>b&&h.push(s(t,b,f-b)),b=(f=i[a](t,f,h))+1;else if(l===p)return f>b&&h.push(s(t,b,f-b)),h=h.filter(t=>"plain"!==t.status||!/^\s*$/.test(t.text)),n.push(s(t,e,f-e+1,{left:c,sub:h})),f;let[d,m]=o(t,e);throw`Nest is not closed. "${c}" at Ln ${d} Col ${m}`},comma:(t,e,n)=>(n.push(s(t,e,1)),e),colon:(t,e,n)=>(n.push(s(t,e,1)),e)},a={"[":t=>t.sub.filter(t=>"comma"!==t.status).map(t=>l(t)),"{":t=>{let e={},n=0,r=t.sub.filter(t=>"comma"!==t.status),u=3*Math.floor(r.length/3);for(;n<u;n+=3){if("colon"!==r[n+1].status)return e;e[r[n+0].text]=l(r[n+2])}return e}};t.exports={parse:t=>{let e,[n,r]=((t,e=0,n=[])=>{let r=e,o=t.length;for(;e<o;e++){let o=t[e],l=u(o);if(l in i){if(r<e&&n.push(s(t,r,e-r)),(e=i[l](t,e,n))<0)return n;r=e+1}}return r<e&&n.push(s(t,r,e-r)),n})(t);return e=r&&"nest"===r.status&&"plain"===n.status?r.sub[0]:n,l(e)}}}]);